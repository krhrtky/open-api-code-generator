name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.ref }}
        name: Release ${{ github.ref }}
        body: |
          ## Changes
          - Automated release from tag ${{ github.ref }}
          
          ## Download
          - TypeScript implementation: See assets below
          - Rust implementation: See assets below
          
          ## Documentation
          See [README.md](README.md) for usage instructions.
        draft: false
        prerelease: false

  build-typescript:
    name: Build TypeScript Release
    runs-on: ubuntu-latest
    needs: create-release
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './implementation/typescript/package-lock.json'
    
    - name: Install dependencies and build
      run: |
        cd implementation/typescript
        npm ci
        npm run build
    
    - name: Package TypeScript implementation
      run: |
        cd implementation/typescript
        tar -czf ../../openapi-codegen-typescript-${{ github.ref_name }}.tar.gz \
          dist/ package.json README.md locales/
    
    - name: Upload TypeScript Release Asset
      uses: softprops/action-gh-release@v2
      with:
        files: ./openapi-codegen-typescript-${{ github.ref_name }}.tar.gz

  build-rust:
    name: Build Rust Release
    runs-on: ${{ matrix.os }}
    needs: create-release
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
        - os: ubuntu-latest
          target: x86_64-unknown-linux-gnu
          suffix: ''
        - os: windows-latest
          target: x86_64-pc-windows-msvc
          suffix: '.exe'
        - os: macos-latest
          target: x86_64-apple-darwin
          suffix: ''
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
    
    - name: Build release
      run: |
        cd implementation/rust
        cargo build --release --target ${{ matrix.target }}
    
    - name: Package binary (Unix)
      if: matrix.os != 'windows-latest'
      run: |
        cd implementation/rust
        tar -czf ../../openapi-codegen-rust-${{ github.ref_name }}-${{ matrix.target }}.tar.gz \
          -C target/${{ matrix.target }}/release openapi-codegen${{ matrix.suffix }}
    
    - name: Package binary (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        cd implementation/rust
        7z a ../../openapi-codegen-rust-${{ github.ref_name }}-${{ matrix.target }}.zip \
          target/${{ matrix.target }}/release/openapi-codegen${{ matrix.suffix }}
    
    - name: Upload Rust Release Asset (Unix)
      if: matrix.os != 'windows-latest'
      uses: softprops/action-gh-release@v2
      with:
        files: ./openapi-codegen-rust-${{ github.ref_name }}-${{ matrix.target }}.tar.gz
    
    - name: Upload Rust Release Asset (Windows)
      if: matrix.os == 'windows-latest'
      uses: softprops/action-gh-release@v2
      with:
        files: ./openapi-codegen-rust-${{ github.ref_name }}-${{ matrix.target }}.zip