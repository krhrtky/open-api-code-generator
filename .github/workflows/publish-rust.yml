name: Publish Rust Package

on:
  push:
    tags:
      - 'rust-v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 1.0.1)'
        required: true
        type: string

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      
      - name: Cache Cargo dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            implementation/rust/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('implementation/rust/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      
      - name: Run tests
        working-directory: implementation/rust
        run: |
          cargo test
          cargo test --release
      
      - name: Build release
        working-directory: implementation/rust
        run: cargo build --release
      
      - name: Update version for manual trigger
        if: github.event_name == 'workflow_dispatch'
        working-directory: implementation/rust
        run: |
          VERSION=${{ github.event.inputs.version }}
          sed -i "s/^version = \".*\"/version = \"$VERSION\"/" Cargo.toml
      
      - name: Validate package
        working-directory: implementation/rust
        run: |
          cargo package --list
          cargo publish --dry-run
      
      - name: Publish to crates.io
        working-directory: implementation/rust
        run: cargo publish
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
      
      - name: Create release notes
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          VERSION=${TAG_NAME#rust-v}
          
          echo "# Rust Package Release $VERSION" > release_notes.md
          echo "" >> release_notes.md
          echo "## Package Information" >> release_notes.md
          echo "- **Package**: openapi-codegen-rust" >> release_notes.md
          echo "- **Version**: $VERSION" >> release_notes.md
          echo "- **Registry**: crates.io" >> release_notes.md
          echo "" >> release_notes.md
          echo "## Installation" >> release_notes.md
          echo '```bash' >> release_notes.md
          echo "cargo install openapi-codegen-rust@$VERSION" >> release_notes.md
          echo '```' >> release_notes.md
          echo "" >> release_notes.md
          echo "## Usage" >> release_notes.md
          echo '```bash' >> release_notes.md
          echo "openapi-codegen --input api.yaml --output ./generated" >> release_notes.md
          echo '```' >> release_notes.md
          echo "" >> release_notes.md
          echo "## Performance" >> release_notes.md
          echo "- âš¡ Ultra-fast code generation" >> release_notes.md
          echo "- ðŸ§  Minimal memory footprint (~8MB)" >> release_notes.md
          echo "- ðŸ“¦ Single binary deployment" >> release_notes.md
      
      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Rust Package ${{ github.ref_name }}
          body_path: release_notes.md
          draft: false
          prerelease: false