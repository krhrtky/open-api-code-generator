import { GeneratorConfig, GenerationResult } from './types';
import { WebhookService } from './webhook';
export declare class OpenAPICodeGenerator {
    private config;
    private parser;
    private i18n;
    private webhookService?;
    private validationRuleService;
    constructor(config: GeneratorConfig, webhookService?: WebhookService);
    generate(inputFile: string): Promise<GenerationResult>;
    private generateModels;
    private generateControllers;
    private groupOperationsByTags;
    private convertSchemaToKotlinClass;
    private convertOneOfToSealedClass;
    private convertAnyOfToUnionType;
    private convertSchemaToKotlinProperty;
    private mapSchemaToKotlinType;
    private generateValidationAnnotations;
    private convertOperationsToKotlinController;
    private convertOperationToKotlinMethod;
    private convertParameterToKotlin;
    private generateMethodName;
    private determineReturnType;
    private getResponseDescription;
    private writeKotlinClass;
    private writeKotlinController;
    private generateKotlinClassContent;
    private generateSealedClassContent;
    private generateDataClassContent;
    private generatePropertySignature;
    private generatePropertyContent;
    private generateKotlinControllerContent;
    private generateMethodContent;
    private generateParameterContent;
    private getHttpAnnotation;
    private getParameterAnnotation;
    private generateBuildFile;
    private generateBuildFileContent;
    private addImportsForType;
    private formatDefaultValue;
    private pascalCase;
    private camelCase;
}
